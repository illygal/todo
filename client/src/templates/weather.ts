import type { Node, TemplateAPI } from "@livereader/graphly-d3";

export type Schema = {
  title: string;
  daytype: "day" | "night" | "dawn" | "grey" | "blue" | "custom";
  moon?: boolean;
  temp: number;
  size: number;
  weathertype: "clear" | "cloudy" | "rainy" | "snowy" | "windy" | "foggy";
  ringColor: {
    outer: string;
    middle: string;
    inner: string;
  };
  timeColor: string;
  time: string;
};

const schema = {
  type: "object",
  properties: {
    title: { type: "string" },
    daytype: {
      type: "string",
      enum: ["day", "night", "dawn", "grey", "blue", "custom"],
    },
    moon: { type: "boolean" },
    temp: { type: "number" },
    size: { type: "number" },
    weathertype: {
      type: "string",
      enum: ["clear", "cloudy", "rainy", "snowy", "windy", "foggy"],
    },
    ringColor: {
      type: "object",
      properties: {
        outer: { type: "string" },
        middle: { type: "string" },
        inner: { type: "string" },
      },
    },
    timeColor: { type: "string" },
    time: { type: "string" },
  },
  required: ["title", "daytype", "temp", "weathertype", "time"],
};

const weather = {
  shapeSize: 300,
  shapePayload: schema,
  shapeBuilder: shapeBuilder,
};
export default weather;
function shapeBuilder(data: Node<Schema>, TAPI: typeof TemplateAPI) {
  if (!document.getElementById("weather-style")) {
    let style = document.createElement("style");
    style.innerHTML = `.ss1,
  .ss2 {
    animation: sun-rays 4s infinite;
  }
  @keyframes sun-rays {
    0% {
      r: 10px;
    }
    50% {
      r: 11px;
    }
    100% {
      r: 10px;
    }
  }`;
    style.id = "weather-style";
    document.head.appendChild(style);
  }

  let color = "#2f3475";
  let raincloudCol = "rgb(182,182,182)";
  let raindrop = "rgb(86,111,151)";
  let snowCol = "rgb(255,255,255";
  let wind = "rgba(254,254,254,0.8)";

  switch (data.payload?.daytype) {
    case "day":
      color = "#ffa333";
      raincloudCol = "rgba(254,254,254,0.8)";
      raindrop = "rgba(119,170,255,0.8)";
      snowCol = "rgba(255,255,255, 0.8)";
      wind = "rgba(254,254,254,0.6)";
      break;
    case "night":
      color = "#2f3475";
      raincloudCol = "#F0F0F0";
      raindrop = "rgba(0,255,255, 0.6)";
      snowCol = "rgba(255,255,255, 0.5)";
      wind = "rgba(254,254,254,0.4)";
      break;
    case "dawn":
      color = "#47354b";
      raincloudCol = "rgba(254,254,254,0.8)";
      raindrop = "rgba(53,116,220,0.7)";
      snowCol = "rgba(255,255,255, 0.8)";
      wind = "rgba(254,254,254,0.6)";
      break;
    case "grey":
      color = "#808080";
      raincloudCol = "rgba(254,254,254,0.8)";
      raindrop = "rgba(53,116,220,0.8)";
      snowCol = "rgba(255,255,255, 0.8)";
      wind = "rgba(254,254,254,0.6)";
      break;
    case "blue":
      color = "#50b8e7";
      raincloudCol = "rgba(254,254,254,0.8)";
      raindrop = "rgba(119,170,255,0.8)";
      snowCol = "rgba(255,255,255, 0.8)";
      wind = "rgba(254,254,254,0.6)";
      break;
    case "custom":
      color = data.payload.ringColor.outer;
      raincloudCol = "rgba(254,254,254,0.8)";
      raindrop = "rgba(119,170,255,0.8)";
      snowCol = "rgba(255,255,255, 0.8)";
      wind = "rgba(254,254,254,0.6)";
      break;
  }

  weather.shapeSize = data.payload?.size || 200;

  const shape = TAPI.SVGShape(`
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
    <g transform="matrix(0.928357,0,0,0.928357,3.58213,3.58213)">
        <circle cx="50" cy="50" r="50" style="fill:white;stroke:black;stroke-width:1.08px;"/>
    </g>
    <g transform="matrix(0.932288,0,0,0.903258,22.5523,-4.29759)">
        <clipPath id="test123">
            <rect x="-20.311" y="9.649" width="98.387" height="49.838"/>
        </clipPath>
        <g clip-path="url(#test123)">
            <circle cx="29.41" cy="58.614" r="46.629" style="fill:${color};fill-opacity:1;"/>
        </g>
    </g>
    <g transform="matrix(0.932288,0,0,-0.903258,22.4873,103.982)">
        <clipPath id="test456">
            <rect x="-20.311" y="9.649" width="98.387" height="49.838"/>
        </clipPath>
        <g clip-path="url(#test456)">
            <circle id="light" cx="29.41" cy="58.614" r="46.629" style="fill-opacity:1;"/>
        </g>
    </g>
    <g transform="matrix(1.01995,0,0,0.523139,-1.49531,32.2924)">
        <clipPath id="test789">
            <rect x="7.839" y="32.767" width="85.242" height="2.163"/>
        </clipPath>
        <g clip-path="url(#test789)">
            <rect x="6.473" y="33.018" width="88.002" height="2.098" style="stroke:black;stroke-width:0.77px;"/>
        </g>
    </g>
  </g>
  `);

  const cloudy = TAPI.SVGShape(`
  <g transform="translate(28,69.5)">
<path class="themeReactive" style="stroke:none; transform:scale(0.5)" d="M6,19A5,5 0 0,1 1,14A5,5 0 0,1 6,9C7,6.65 9.3,5 12,5C15.43,5 18.24,7.66 18.5,11.03L19,11A4,4 0 0,1 23,15A4,4 0 0,1 19,19H6M19,13H17V12A5,5 0 0,0 12,7C9.5,7 7.45,8.82 7.06,11.19C6.73,11.07 6.37,11 6,11A3,3 0 0,0 3,14A3,3 0 0,0 6,17H19A2,2 0 0,0 21,15A2,2 0 0,0 19,13Z" />
   </g>
    `);

  const sunny = TAPI.SVGShape(`
  <g transform="translate(28,69.5)">
    <path class="themeReactive" style="stroke:none;transform:scale(0.5)" d="M12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M3.36,17L5.12,13.23C5.26,14 5.53,14.78 5.95,15.5C6.37,16.24 6.91,16.86 7.5,17.37L3.36,17M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7M20.64,17L16.5,17.36C17.09,16.85 17.62,16.22 18.04,15.5C18.46,14.77 18.73,14 18.87,13.21L20.64,17M12,22L9.59,18.56C10.33,18.83 11.14,19 12,19C12.82,19 13.63,18.83 14.37,18.56L12,22Z" />   
    </g>
    `);

  const night = TAPI.SVGShape(`  
            <g transform="translate(28,69.5)">
            <path class="themeReactive" style="stroke:none; transform:scale(0.5)" d="M17.75,4.09L15.22,6.03L16.13,9.09L13.5,7.28L10.87,9.09L11.78,6.03L9.25,4.09L12.44,4L13.5,1L14.56,4L17.75,4.09M21.25,11L19.61,12.25L20.2,14.23L18.5,13.06L16.8,14.23L17.39,12.25L15.75,11L17.81,10.95L18.5,9L19.19,10.95L21.25,11M18.97,15.95C19.8,15.87 20.69,17.05 20.16,17.8C19.84,18.25 19.5,18.67 19.08,19.07C15.17,23 8.84,23 4.94,19.07C1.03,15.17 1.03,8.83 4.94,4.93C5.34,4.53 5.76,4.17 6.21,3.85C6.96,3.32 8.14,4.21 8.06,5.04C7.79,7.9 8.75,10.87 10.95,13.06C13.14,15.26 16.1,16.22 18.97,15.95M17.33,17.97C14.5,17.81 11.7,16.64 9.53,14.5C7.36,12.31 6.2,9.5 6.04,6.68C3.23,9.82 3.34,14.64 6.35,17.66C9.37,20.67 14.19,20.78 17.33,17.97Z" />
          </g>
        `);

  const sunset = TAPI.SVGShape(` 
    <g transform="translate(28,69.5)">
    <path class="themeReactive" style="stroke:none; transform:scale(0.5)" d="M3,12H7A5,5 0 0,1 12,7A5,5 0 0,1 17,12H21A1,1 0 0,1 22,13A1,1 0 0,1 21,14H3A1,1 0 0,1 2,13A1,1 0 0,1 3,12M5,16H19A1,1 0 0,1 20,17A1,1 0 0,1 19,18H5A1,1 0 0,1 4,17A1,1 0 0,1 5,16M17,20A1,1 0 0,1 18,21A1,1 0 0,1 17,22H7A1,1 0 0,1 6,21A1,1 0 0,1 7,20H17M15,12A3,3 0 0,0 12,9A3,3 0 0,0 9,12H15M12,2L14.39,5.42C13.65,5.15 12.84,5 12,5C11.16,5 10.35,5.15 9.61,5.42L12,2M3.34,7L7.5,6.65C6.9,7.16 6.36,7.78 5.94,8.5C5.5,9.24 5.25,10 5.11,10.79L3.34,7M20.65,7L18.88,10.79C18.74,10 18.47,9.23 18.05,8.5C17.63,7.78 17.1,7.15 16.5,6.64L20.65,7Z" /> 
    </g>`);

  const sun = TAPI.SVGShape(`
    <g transform="matrix(1,0,0,1,-3.9982,-3.6536)">
    <g transform="matrix(1,0,0,1,-0.692585,9.18229)">
        <clipPath id="sun1">
            <rect x="41.568" y="31.751" width="26.249" height="9.066"/>
            </clipPath>
            <g clip-path="url(#sun1)">
            <circle class="sun" cx="52.693" cy="42.876" r="11.124" style="fill:${
              data.payload?.moon ? "#F6F1D5" : "#ffe65c"
            };fill-opacity:1;stroke:none;"/>
            </g>
            </g>
            </g>`);

  const sunShadow1 = TAPI.SVGShape(`
            <g transform="matrix(1,0,0,1,-1.9982,-3.1145)">
  <g transform="matrix(2.7927,0,0,2.7927,-92.0894,-64.5575)">
      <clipPath id="sunshadow1">
      <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
      </clipPath>
      <g clip-path="url(#sunshadow1)">
          <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:rgb(255, 198, 102);fill-opacity:1; stroke:none;"/>
      </g>
  </g>
</g>`);

  const sunShadow2 = TAPI.SVGShape(`
  <g transform="matrix(1,0,0,1,-2.4057,-3.0469)">
        <g transform="matrix(3.57224,0,0,3.57224,-131.086,-96.3764)">
            <clipPath id="sunshadow21">
                <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
            </clipPath>
            <g clip-path="url(#sunshadow21)">
                <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:rgb(255, 177, 77);fill-opacity:1;stroke:none;"/>
            </g>
        </g>
    </g>
    </g>
</g>
</g>`);

  const moon = TAPI.SVGShape(`
    <g transform="matrix(1,0,0,1,-3.9982,-3.6536)">
    <g transform="matrix(1,0,0,1,-0.692585,9.18229)">
        <clipPath id="moon1">
            <rect x="41.568" y="31.751" width="26.249" height="9.066"/>
            </clipPath>
            <g clip-path="url(#moon1)">
            <circle class="moon" cx="52.693" cy="42.876" r="11.124" style="fill:#ffe646;fill-opacity:1;stroke:none;"/>
            </g>
            </g>
            </g>`);

  const moonShadow1 = TAPI.SVGShape(`
            <g transform="matrix(1,0,0,1,-1.9982,-3.1145)">
  <g transform="matrix(2.7927,0,0,2.7927,-92.0894,-64.5575)">
      <clipPath id="moonshadow1">
      <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
      </clipPath>
      <g clip-path="url(#moonshadow1)">
          <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:rgb(79, 85, 148);fill-opacity:1; stroke:none;"/>
      </g>
  </g>
</g>`);

  const moonShadow2 = TAPI.SVGShape(`
  <g transform="matrix(1,0,0,1,-2.4057,-3.0469)">
        <g transform="matrix(3.57224,0,0,3.57224,-131.086,-96.3764)">
            <clipPath id="moonshadow21">
                <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
            </clipPath>
            <g clip-path="url(#moonshadow21)">
                <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:rgb(65, 73, 137);fill-opacity:1;stroke:none;"/>
            </g>
        </g>
    </g>
    </g>
</g>
</g>`);

  const dawn = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-3.9982,-3.6536)">
<g transform="matrix(1,0,0,1,-0.692585,9.18229)">
    <clipPath id="dawn1">
        <rect x="41.568" y="31.751" width="26.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#dawn1)">
        <circle class="dawn" cx="52.693" cy="42.876" r="11.124" style="fill:#ffe646;fill-opacity:1;stroke:none;"/>
        </g>
        </g>
        </g>`);

  const dawnShadow1 = TAPI.SVGShape(`
        <g transform="matrix(1,0,0,1,-1.9982,-3.1145)">
<g transform="matrix(2.7927,0,0,2.7927,-92.0894,-64.5575)">
  <clipPath id="dawnshadow1">
  <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
  </clipPath>
  <g clip-path="url(#dawnshadow1)">
      <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:#e18957;fill-opacity:1; stroke:none;"/>
  </g>
</g>
</g>`);

  const dawnShadow2 = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-2.4057,-3.0469)">
      <g transform="matrix(3.57224,0,0,3.57224,-131.086,-96.3764)">
          <clipPath id="dawnshadow21">
              <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
          </clipPath>
          <g clip-path="url(#dawnshadow21)">
              <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:#b24342;fill-opacity:1;stroke:none;"/>
          </g>
      </g>
  </g>
  </g>
</g>
</g>`);

  const grey = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-3.9982,-3.6536)">
<g transform="matrix(1,0,0,1,-0.692585,9.18229)">
    <clipPath id="grey1">
        <rect x="41.568" y="31.751" width="26.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#grey1)">
        <circle class="grey" cx="52.693" cy="42.876" r="11.124" style="fill:#ffe646;fill-opacity:1;stroke:none;"/>
        </g>
        </g>
        </g>`);
  const greyShadow1 = TAPI.SVGShape(`
        <g transform="matrix(1,0,0,1,-1.9982,-3.1145)">
<g transform="matrix(2.7927,0,0,2.7927,-92.0894,-64.5575)">
  <clipPath id="greyshadow1">
  <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
  </clipPath>
  <g clip-path="url(#greyshadow1)">
      <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:#a6a6a6;fill-opacity:1; stroke:none;"/>
  </g>
</g>
</g>`);

  const greyShadow2 = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-2.4057,-3.0469)">
      <g transform="matrix(3.57224,0,0,3.57224,-131.086,-96.3764)">
          <clipPath id="greyshadow21">
              <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
          </clipPath>
          <g clip-path="url(#greyshadow21)">
              <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:#999999;fill-opacity:1;stroke:none;"/>
          </g>
      </g>
  </g>
  </g>
</g>
</g>`);

  const blue = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-3.9982,-3.6536)">
<g transform="matrix(1,0,0,1,-0.692585,9.18229)">
    <clipPath id="blue1">
        <rect x="41.568" y="31.751" width="26.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#blue1)">
        <circle class="blue" cx="52.693" cy="42.876" r="11.124" style="fill:#ffe646;fill-opacity:1;stroke:none;"/>
        </g>
        </g>
        </g>`);
  const blueShadow1 = TAPI.SVGShape(`
        <g transform="matrix(1,0,0,1,-1.9982,-3.1145)">
<g transform="matrix(2.7927,0,0,2.7927,-92.0894,-64.5575)">
  <clipPath id="blueshadow1">
  <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
  </clipPath>
  <g clip-path="url(#blueshadow1)">
      <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:#b9e2f5;fill-opacity:1; stroke:none;"/>
  </g>
</g>
</g>`);

  const blueShadow2 = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-2.4057,-3.0469)">
      <g transform="matrix(3.57224,0,0,3.57224,-131.086,-96.3764)">
          <clipPath id="blueshadow21">
              <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
          </clipPath>
          <g clip-path="url(#blueshadow21)">
              <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:#84cdee;fill-opacity:1;stroke:none;"/>
          </g>
      </g>
  </g>
  </g>
</g>
</g>`);

  const custom = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-3.9982,-3.6536)">
<g transform="matrix(1,0,0,1,-0.692585,9.18229)">
    <clipPath id="custom1">
        <rect x="41.568" y="31.751" width="26.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#custom1)">
        <circle class="grey" cx="52.693" cy="42.876" r="11.124" style="fill:#ffe646;fill-opacity:1;stroke:none;"/>
        </g>
        </g>
        </g>`);
  const customShadow1 = TAPI.SVGShape(`
        <g transform="matrix(1,0,0,1,-1.9982,-3.1145)">
<g transform="matrix(2.7927,0,0,2.7927,-92.0894,-64.5575)">
  <clipPath id="customshadow1">
  <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
  </clipPath>
  <g clip-path="url(#customshadow1)">
      <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:${data.payload?.ringColor?.inner};fill-opacity:1; stroke:none;"/>
  </g>
</g>
</g>`);

  const customShadow2 = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-2.4057,-3.0469)">
      <g transform="matrix(3.57224,0,0,3.57224,-131.086,-96.3764)">
          <clipPath id="customshadow21">
              <rect x="37.568" y="26.751" width="26.249" height="14.066"/>
          </clipPath>
          <g clip-path="url(#customshadow21)">
              <circle class="ss2" cx="50.693" cy="40.876" r="9.124" style="fill:${data.payload?.ringColor?.middle};fill-opacity:1;stroke:none;"/>
          </g>
      </g>
  </g>
  </g>
</g>
</g>`);

  const rainy = TAPI.SVGShape(`
  <g transform="translate(28,69.5)">
   <path class="themeReactive" style="stroke:none;transform:scale(0.5)" d="M9,12C9.53,12.14 9.85,12.69 9.71,13.22L8.41,18.05C8.27,18.59 7.72,18.9 7.19,18.76C6.65,18.62 6.34,18.07 6.5,17.54L7.78,12.71C7.92,12.17 8.47,11.86 9,12M13,12C13.53,12.14 13.85,12.69 13.71,13.22L11.64,20.95C11.5,21.5 10.95,21.8 10.41,21.66C9.88,21.5 9.56,20.97 9.7,20.43L11.78,12.71C11.92,12.17 12.47,11.86 13,12M17,12C17.53,12.14 17.85,12.69 17.71,13.22L16.41,18.05C16.27,18.59 15.72,18.9 15.19,18.76C14.65,18.62 14.34,18.07 14.5,17.54L15.78,12.71C15.92,12.17 16.47,11.86 17,12M17,10V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11C3,12.11 3.6,13.08 4.5,13.6V13.59C5,13.87 5.14,14.5 4.87,14.96C4.59,15.43 4,15.6 3.5,15.32V15.33C2,14.47 1,12.85 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12C23,13.5 22.2,14.77 21,15.46V15.46C20.5,15.73 19.91,15.57 19.63,15.09C19.36,14.61 19.5,14 20,13.72V13.73C20.6,13.39 21,12.74 21,12A2,2 0 0,0 19,10H17Z" />    
    </g>
    `);

  const snowy = TAPI.SVGShape(
    `
      <g transform="translate(28,69.5)">
      <path
        class="themeReactive"
        style="stroke:none;transform:scale(0.5)"
        d="M6,14A1,1 0 0,1 7,15A1,1 0 0,1 6,16A5,5 0 0,1 1,11A5,5 0 0,1 6,6C7,3.65 9.3,2 12,2C15.43,2 18.24,4.66 18.5,8.03L19,8A4,4 0 0,1 23,12A4,4 0 0,1 19,16H18A1,1 0 0,1 17,15A1,1 0 0,1 18,14H19A2,2 0 0,0 21,12A2,2 0 0,0 19,10H17V9A5,5 0 0,0 12,4C9.5,4 7.45,5.82 7.06,8.19C6.73,8.07 6.37,8 6,8A3,3 0 0,0 3,11A3,3 0 0,0 6,14M7.88,18.07L10.07,17.5L8.46,15.88C8.07,15.5 8.07,14.86 8.46,14.46C8.85,14.07 9.5,14.07 9.88,14.46L11.5,16.07L12.07,13.88C12.21,13.34 12.76,13.03 13.29,13.17C13.83,13.31 14.14,13.86 14,14.4L13.41,16.59L15.6,16C16.14,15.86 16.69,16.17 16.83,16.71C16.97,17.24 16.66,17.79 16.12,17.93L13.93,18.5L15.54,20.12C15.93,20.5 15.93,21.15 15.54,21.54C15.15,21.93 14.5,21.93 14.12,21.54L12.5,19.93L11.93,22.12C11.79,22.66 11.24,22.97 10.71,22.83C10.17,22.69 9.86,22.14 10,21.6L10.59,19.41L8.4,20C7.86,20.14 7.31,19.83 7.17,19.29C7.03,18.76 7.34,18.21 7.88,18.07Z"
      />
      </g>
      `
  );

  const windy = TAPI.SVGShape(
    `
    <g transform="translate(28,69.5)">
    <path class="themeReactive" style="stroke:none;transform:scale(0.5)" d="M4,10A1,1 0 0,1 3,9A1,1 0 0,1 4,8H12A2,2 0 0,0 14,6A2,2 0 0,0 12,4C11.45,4 10.95,4.22 10.59,4.59C10.2,5 9.56,5 9.17,4.59C8.78,4.2 8.78,3.56 9.17,3.17C9.9,2.45 10.9,2 12,2A4,4 0 0,1 16,6A4,4 0 0,1 12,10H4M19,12A1,1 0 0,0 20,11A1,1 0 0,0 19,10C18.72,10 18.47,10.11 18.29,10.29C17.9,10.68 17.27,10.68 16.88,10.29C16.5,9.9 16.5,9.27 16.88,8.88C17.42,8.34 18.17,8 19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14H5A1,1 0 0,1 4,13A1,1 0 0,1 5,12H19M18,18H4A1,1 0 0,1 3,17A1,1 0 0,1 4,16H18A3,3 0 0,1 21,19A3,3 0 0,1 18,22C17.17,22 16.42,21.66 15.88,21.12C15.5,20.73 15.5,20.1 15.88,19.71C16.27,19.32 16.9,19.32 17.29,19.71C17.47,19.89 17.72,20 18,20A1,1 0 0,0 19,19A1,1 0 0,0 18,18Z" />
    </g>
    `
  );

  const cloud = TAPI.SVGShape(`
    <g transform="matrix(1,0,0,1,-3.6256,12.4724)">
    <g transform="matrix(1.18637,0,0,1.18637,-32.16,-17.1965)">
        <clipPath id="cloud1">
            <rect x="41.568" y="31.751" width="18.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#cloud1)">
            <circle class="cloud" cx="50.693" cy="40.876" r="9.124" style="fill:#F0F0F0;;fill-opacity:0.69;stroke:none;"/>
        </g>
    </g>
    <g transform="matrix(0.960979,0,0,0.960979,-11.9659,-7.99643)">
        <clipPath id="cloud2">
            <rect x="41.568" y="31.751" width="18.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#cloud2)">
            <circle class="cloud" cx="50.693" cy="40.876" r="9.124" style="fill:#F0F0F0;;fill-opacity:0.64;stroke:none;"/>
        </g>
    </g>
    <g transform="matrix(0.731823,0,0,0.731823,-15.795,1.3572)">
        <clipPath id="cloud3">
            <rect x="41.568" y="31.751" width="18.249" height="9.066"/>
        </clipPath>
        <g clip-path="url(#cloud3)">
            <circle class="cloud" cx="50.693" cy="40.876" r="9.124" style="fill:#F0F0F0;;stroke:none;"/>
        </g>
    </g>
</g>
    `);

  const cloud2 = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,10.6977,6.9053)">
<g transform="matrix(0.944936,0,0,0.944936,0.43338,-18.0977)">
    <clipPath id="cloud21">
        <rect x="41.568" y="31.751" width="18.249" height="9.066"/>
    </clipPath>
    <g clip-path="url(#cloud21)">
        <circle cx="50.693" cy="40.876" r="9.124" style="fill:#F0F0F0;;stroke:none;;fill-opacity:0.69;"/>
    </g>
</g>
<g transform="matrix(0.765411,0,0,0.765411,16.5178,-10.7699)">
    <clipPath id="cloud22">
        <rect x="41.568" y="31.751" width="18.249" height="9.066"/>
    </clipPath>
    <g clip-path="url(#cloud22)">
        <circle cx="50.693" cy="40.876" r="9.124" style="fill:#F0F0F0;stroke:none;fill-opacity:0.64;"/>
    </g>
</g>
<g transform="matrix(0.58289,0,0,0.58289,13.4679,-3.31981)">
    <clipPath id="cloud32">
        <rect x="41.568" y="31.751" width="18.249" height="9.066"/>
    </clipPath>
    <g clip-path="url(#cloud32)">
        <circle cx="50.693" cy="40.876" r="9.124" style="fill:#F0F0F0;;stroke:none;"/>
    </g>
</g>
</g>
`);
  const rainDrops =
    TAPI.SVGShape(` <g transform="matrix(1,0,0,1,14.6977,17.9053)">
<g transform="matrix(1,0,0,1,-37.6977,-11.9053)">
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="raindrop1">
            <rect x="42.796" y="14.988" width="17.243" height="9.371"/>
        </clipPath>
        <g clip-path="url(#raindrop1)">
            <g transform="matrix(0.944936,0,0,0.944936,3.51551,-15.0155)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.69;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="raindrop2">
            <rect x="51.417" y="16.616" width="13.967" height="7.744"/>
        </clipPath>
        <g clip-path="url(#raindrop2)">
            <g transform="matrix(0.765411,0,0,0.765411,19.5999,-7.68776)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.64;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="raindrop3">
            <rect x="40.78" y="18.27" width="10.637" height="6.078"/>
        </clipPath>
        <g clip-path="url(#raindrop3)">
            <g transform="matrix(0.58289,0,0,0.58289,16.55,-0.237677)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(0.204655,0,0,0.204655,46.2881,23.6585)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
    <g transform="matrix(0.14332,0,0,0.14332,40.402,22.0299)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
    <g transform="matrix(0.14332,0,0,0.14332,52.5745,22.49)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
    <g transform="matrix(0.204655,0,0,0.204655,57.8225,23.6585)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
</g>
</g>`);

  const rainDrops2 =
    TAPI.SVGShape(` <g transform="matrix(1,0,0,1,53.6977,17.9053)">
<g transform="matrix(1,0,0,1,-37.6977,-11.9053)">
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="raindrop21">
            <rect x="42.796" y="14.988" width="17.243" height="9.371"/>
        </clipPath>
        <g clip-path="url(#raindrop21)">
            <g transform="matrix(0.944936,0,0,0.944936,3.51551,-15.0155)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.69;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="raindrop22">
            <rect x="51.417" y="16.616" width="13.967" height="7.744"/>
        </clipPath>
        <g clip-path="url(#raindrop22)">
            <g transform="matrix(0.765411,0,0,0.765411,19.5999,-7.68776)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.64;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="raindrop23">
            <rect x="40.78" y="18.27" width="10.637" height="6.078"/>
        </clipPath>
        <g clip-path="url(#raindrop23)">
            <g transform="matrix(0.58289,0,0,0.58289,16.55,-0.237677)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(0.204655,0,0,0.204655,46.2881,23.6585)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
    <g transform="matrix(0.14332,0,0,0.14332,40.402,22.0299)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
    <g transform="matrix(0.14332,0,0,0.14332,52.5745,22.49)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
    <g transform="matrix(0.204655,0,0,0.204655,57.8225,23.6585)">
        <path d="M1.464,14.536C0.527,13.598 -0,12.326 0,11C0,8.5 2.777,4.025 5,1C7.223,4.025 10,8.5 10,11C10,11 10,11.001 10,11.001C10,13.744 7.743,16.001 5,16.001C3.674,16.001 2.401,15.474 1.464,14.536Z" style="fill:${raindrop};fill-opacity:0.62;stroke: none;"/>
    </g>
</g>
</g>`);

  const snow = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,-3.6159,0.59901)">
    <g transform="matrix(0.00318155,0.00401316,-0.00401316,0.00318155,28.2748,20.4724)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
    <g transform="matrix(0.00393219,0.00175802,-0.00175802,0.00393219,71.1797,19.4859)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
    <g transform="matrix(0.00345778,-0.000918873,0.000918873,0.00345778,62.8807,29.4464)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
    <g transform="matrix(0.005989,0.00142704,-0.00142704,0.005989,81.126,36.6961)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
    <g transform="matrix(0.00520253,-0.00225796,0.00225796,0.00520253,43.0377,27.5277)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
    <g transform="matrix(0.00520253,-0.00225796,0.00225796,0.00520253,20.3195,36.6429)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
    <g transform="matrix(0.00495714,-0.00215146,0.00215146,0.00495714,52.223,9.99237)">
        <g transform="matrix(1,0,0,1,-640,-608.5)">
            <g transform="matrix(0.1,0,0,-0.1,0,1217)">
                <path d="M5970,12170L5970,10425L5075,11320L4465,10710L5970,9205L5968,8839L5965,8474L5060,8952C4562,9214 4149,9428 4142,9427C4119,9423 3521,8985 3520,8971C3520,8964 3558,8734 3605,8461C3844,7066 3878,6865 3874,6861C3872,6858 3693,6914 3476,6985L3083,7113L2609,8043C2348,8554 2130,8980 2124,8988C2115,9000 2053,8972 1732,8808L1351,8614L1636,8056C1793,7749 1920,7496 1918,7495C1916,7493 1550,7610 1105,7755C659,7900 289,8020 281,8022C267,8025 243,7958 67,7415C31,7305 4,7212 8,7209C17,7201 1624,6680 1639,6680C1645,6680 1650,6677 1650,6673C1650,6668 1398,6537 1091,6380L532,6095L642,5880C802,5568 922,5335 924,5333C925,5332 1350,5546 1868,5810C2386,6074 2814,6290 2819,6290C2834,6290 3514,6069 3522,6061C3526,6058 3212,5747 2825,5370C2437,4993 2120,4681 2120,4676C2120,4667 2274,4187 2333,4010L2355,3945L2510,3923C3283,3812 4443,3640 4447,3637C4452,3632 3923,2900 3914,2900C3909,2900 2867,2735 2171,2625C1981,2594 1825,2569 1824,2567C1821,2565 1952,1728 1956,1722C1957,1720 2237,1763 2579,1818C2920,1872 3200,1915 3200,1914C3200,1912 2970,1595 2690,1209C2409,823 2181,506 2182,504C2184,503 2340,389 2530,251C2844,22 2876,1 2888,17C2895,27 3124,343 3398,719C3792,1262 3896,1399 3902,1384C3908,1368 3983,904 4079,282C4089,220 4099,168 4101,166C4103,165 4294,193 4525,230L4945,297L4943,321C4940,353 4910,545 4785,1330C4727,1696 4665,2086 4648,2196L4617,2397L4870,2745L5124,3093L5139,3059C5148,3041 5347,2636 5581,2160L6007,1295L6397,1292L6786,1290L7015,1752C7141,2007 7342,2412 7461,2653L7678,3091L7929,2746C8067,2557 8180,2394 8180,2385C8180,2370 8150,2179 7946,890C7899,596 7860,342 7858,326L7855,297L8275,230C8647,171 8696,165 8702,179C8706,188 8748,443 8795,745C8843,1048 8885,1316 8889,1343C8894,1369 8899,1393 8902,1396C8905,1399 9134,1089 9410,708C9687,327 9916,12 9920,7C9924,2 10567,458 10613,500C10617,504 10391,823 10111,1210C9830,1596 9600,1913 9600,1914C9600,1915 9880,1872 10221,1818C10563,1764 10844,1721 10845,1722C10849,1728 10979,2564 10976,2567C10974,2569 10760,2604 10499,2645C10238,2687 9769,2761 9455,2811C9139,2861 8880,2906 8874,2913C8853,2935 8349,3633 8352,3636C8356,3639 8484,3658 10027,3880C10256,3913 10445,3941 10446,3943C10453,3951 10680,4660 10679,4671C10679,4679 10362,4993 9974,5370C9587,5746 9274,6058 9278,6061C9282,6065 9442,6118 9634,6180L9983,6293L10054,6258C10093,6238 10518,6022 10999,5777L11874,5331L11890,5358C11899,5373 11987,5545 12087,5740L12268,6096L11709,6380C11402,6537 11154,6668 11158,6671C11162,6675 11530,6796 11975,6940C12421,7085 12788,7205 12792,7209C12796,7212 12754,7352 12699,7520C12645,7688 12586,7869 12569,7923C12550,7981 12533,8020 12525,8020C12517,8020 12146,7901 11698,7756C11251,7610 10884,7493 10883,7494C10881,7496 11008,7748 11164,8056C11321,8363 11448,8615 11447,8616C11446,8616 11275,8704 11067,8810C10858,8916 10685,8998 10680,8994C10675,8989 10457,8564 10195,8050C9933,7536 9718,7115 9717,7114C9708,7105 8937,6860 8932,6864C8928,6869 8972,7136 9221,8575C9275,8888 9287,8977 9277,8986C9263,8998 8691,9413 8674,9423C8668,9427 8251,9214 7749,8950L6835,8471L6832,8838L6830,9205L8335,10710L7725,11320L6830,10425L6830,12170L5970,12170ZM5245,7880L5965,7501L5968,6841C5969,6477 5966,6180 5962,6180C5945,6180 4817,6549 4810,6557C4806,6561 4777,6714 4746,6895C4556,8012 4519,8227 4516,8243C4514,8252 4515,8260 4518,8260C4522,8260 4849,8089 5245,7880ZM8145,7404C8065,6937 7998,6555 7997,6554C7992,6550 6846,6180 6839,6180C6834,6180 6830,6470 6830,6838L6830,7496L7557,7877C7957,8087 8286,8257 8288,8255C8290,8253 8226,7870 8145,7404ZM5078,5560C5417,5449 5696,5358 5697,5356C5703,5350 5038,4439 5024,4433C5012,4429 3361,4666 3353,4673C3352,4675 3419,4744 3503,4827C3734,5055 4455,5759 4458,5759C4460,5760 4739,5670 5078,5560ZM8896,5218C9201,4920 9447,4674 9443,4670C9431,4660 7795,4426 7779,4432C7764,4438 7096,5350 7102,5356C7105,5358 8329,5758 8338,5760C8340,5760 8591,5516 8896,5218ZM6749,4370C6937,4112 7093,3895 7096,3887C7102,3870 7059,3779 6680,3015C6524,2702 6395,2452 6392,2460C6389,2468 6247,2758 6075,3105C5699,3866 5695,3874 5706,3893C5729,3932 6394,4840 6400,4840C6404,4840 6561,4629 6749,4370Z" style="fill:${snowCol};"/>
            </g>
        </g>
    </g>
</g>`);

  const windyCloud = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,15.00032441,17.000677872)">
<g transform="matrix(1,0,0,1,-37.6977,-11.9053)">
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="windy1">
            <rect x="42.796" y="14.988" width="17.243" height="9.371"/>
        </clipPath>
        <g clip-path="url(#windy1)">
            <g transform="matrix(0.944936,0,0,0.944936,3.51551,-15.0155)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.69;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="windy2">
            <rect x="51.417" y="16.616" width="13.967" height="7.744"/>
        </clipPath>
        <g clip-path="url(#windy2)">
            <g transform="matrix(0.765411,0,0,0.765411,19.5999,-7.68776)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.64;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="windy3">
            <rect x="40.78" y="18.27" width="10.637" height="6.078"/>
        </clipPath>
        <g clip-path="url(#windy3)">
            <g transform="matrix(0.58289,0,0,0.58289,16.55,-0.237677)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,0.788398,40.1469,14.7566)">
        <path d="M21.181,12.664L11.671,12.705C11.495,12.706 11.328,12.796 11.205,12.955C11.083,13.114 11.016,13.329 11.019,13.551C11.019,13.551 11.019,13.552 11.019,13.552C11.026,14.02 11.401,14.038 11.77,14.038C13.407,14.041 17.673,14.021 19.884,14.025C20.249,14.025 20.571,13.901 20.829,13.574C20.947,13.424 20.994,13.372 21.042,13.258C21.062,13.209 21.094,13.151 21.113,13.063C21.146,12.913 21.181,12.823 21.181,12.664C21.181,12.664 21.181,12.664 21.181,12.664ZM19.069,12.673L21.181,12.664C21.181,12.664 21.333,11.586 20.639,10.895C20.212,10.47 18.792,10.173 18.126,10.822C17.96,10.985 17.749,11.184 18.005,11.567C18.161,11.8 18.561,11.601 18.817,11.525C19.323,11.375 20.282,11.493 19.945,12.398C19.85,12.653 19.069,12.673 19.069,12.673Z" style="fill:${wind};stroke: none;"/>
    </g>
    <g transform="matrix(0.598917,-1.19015e-17,-7.51605e-18,0.512861,41.5191,16.7126)">
        <path d="M21.181,12.664L11.671,12.705C11.495,12.706 11.328,12.796 11.205,12.955C11.083,13.114 11.016,13.329 11.019,13.551C11.019,13.551 11.019,13.552 11.019,13.552C11.026,14.02 11.401,14.038 11.77,14.038C13.407,14.041 17.673,14.021 19.884,14.025C20.249,14.025 20.571,13.901 20.829,13.574C20.947,13.424 20.994,13.372 21.042,13.258C21.062,13.209 21.094,13.151 21.113,13.063C21.146,12.913 21.181,12.823 21.181,12.664C21.181,12.664 21.181,12.664 21.181,12.664ZM19.069,12.673L21.181,12.664C21.181,12.664 21.333,11.586 20.639,10.895C20.212,10.47 18.792,10.173 18.126,10.822C17.96,10.985 17.749,11.184 18.005,11.567C18.161,11.8 18.561,11.601 18.817,11.525C19.323,11.375 20.282,11.493 19.945,12.398C19.85,12.653 19.069,12.673 19.069,12.673Z" style="fill:${wind};stroke: none;"/>
    </g>
    <g transform="matrix(0.747693,-1.19015e-17,-9.3831e-18,0.512861,30.9732,18.5561)">
        <path d="M21.181,12.664L11.671,12.705C11.495,12.706 11.328,12.796 11.205,12.955C11.083,13.114 11.016,13.329 11.019,13.551C11.019,13.551 11.019,13.552 11.019,13.552C11.026,14.02 11.401,14.038 11.77,14.038C13.407,14.041 17.673,14.021 19.884,14.025C20.249,14.025 20.571,13.901 20.829,13.574C20.947,13.424 20.994,13.372 21.042,13.258C21.062,13.209 21.094,13.151 21.113,13.063C21.146,12.913 21.181,12.823 21.181,12.664C21.181,12.664 21.181,12.664 21.181,12.664ZM19.069,12.673L21.181,12.664C21.181,12.664 21.333,11.586 20.639,10.895C20.212,10.47 18.792,10.173 18.126,10.822C17.96,10.985 17.749,11.184 18.005,11.567C18.161,11.8 18.561,11.601 18.817,11.525C19.323,11.375 20.282,11.493 19.945,12.398C19.85,12.653 19.069,12.673 19.069,12.673Z" style="fill:${wind};stroke: none;"/>
    </g>
</g>
</g>


`);

  const windyCloud2 = TAPI.SVGShape(`
<g transform="matrix(1,0,0,1,55.00032441,25.000677872)">
<g transform="matrix(1,0,0,1,-37.6977,-11.9053)">
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="windy21">
            <rect x="42.796" y="14.988" width="17.243" height="9.371"/>
        </clipPath>
        <g clip-path="url(#windy21)">
            <g transform="matrix(0.944936,0,0,0.944936,3.51551,-15.0155)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.69;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="windy22">
            <rect x="51.417" y="16.616" width="13.967" height="7.744"/>
        </clipPath>
        <g clip-path="url(#windy22)">
            <g transform="matrix(0.765411,0,0,0.765411,19.5999,-7.68776)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};fill-opacity:0.64;stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,1,-3.08213,-3.08213)">
        <clipPath id="windy23">
            <rect x="40.78" y="18.27" width="10.637" height="6.078"/>
        </clipPath>
        <g clip-path="url(#windy23)">
            <g transform="matrix(0.58289,0,0,0.58289,16.55,-0.237677)">
                <g>
                    <circle cx="50.693" cy="40.876" r="9.124" style="fill:${raincloudCol};stroke: none;"/>
                </g>
            </g>
        </g>
    </g>
    <g transform="matrix(1,0,0,0.788398,40.1469,14.7566)">
        <path d="M21.181,12.664L11.671,12.705C11.495,12.706 11.328,12.796 11.205,12.955C11.083,13.114 11.016,13.329 11.019,13.551C11.019,13.551 11.019,13.552 11.019,13.552C11.026,14.02 11.401,14.038 11.77,14.038C13.407,14.041 17.673,14.021 19.884,14.025C20.249,14.025 20.571,13.901 20.829,13.574C20.947,13.424 20.994,13.372 21.042,13.258C21.062,13.209 21.094,13.151 21.113,13.063C21.146,12.913 21.181,12.823 21.181,12.664C21.181,12.664 21.181,12.664 21.181,12.664ZM19.069,12.673L21.181,12.664C21.181,12.664 21.333,11.586 20.639,10.895C20.212,10.47 18.792,10.173 18.126,10.822C17.96,10.985 17.749,11.184 18.005,11.567C18.161,11.8 18.561,11.601 18.817,11.525C19.323,11.375 20.282,11.493 19.945,12.398C19.85,12.653 19.069,12.673 19.069,12.673Z" style="fill:${wind};stroke: none;"/>
    </g>
    <g transform="matrix(0.598917,-1.19015e-17,-7.51605e-18,0.512861,41.5191,16.7126)">
        <path d="M21.181,12.664L11.671,12.705C11.495,12.706 11.328,12.796 11.205,12.955C11.083,13.114 11.016,13.329 11.019,13.551C11.019,13.551 11.019,13.552 11.019,13.552C11.026,14.02 11.401,14.038 11.77,14.038C13.407,14.041 17.673,14.021 19.884,14.025C20.249,14.025 20.571,13.901 20.829,13.574C20.947,13.424 20.994,13.372 21.042,13.258C21.062,13.209 21.094,13.151 21.113,13.063C21.146,12.913 21.181,12.823 21.181,12.664C21.181,12.664 21.181,12.664 21.181,12.664ZM19.069,12.673L21.181,12.664C21.181,12.664 21.333,11.586 20.639,10.895C20.212,10.47 18.792,10.173 18.126,10.822C17.96,10.985 17.749,11.184 18.005,11.567C18.161,11.8 18.561,11.601 18.817,11.525C19.323,11.375 20.282,11.493 19.945,12.398C19.85,12.653 19.069,12.673 19.069,12.673Z" style="fill:${wind};stroke: none;"/>
    </g>
    <g transform="matrix(0.747693,-1.19015e-17,-9.3831e-18,0.512861,30.9732,18.5561)">
        <path d="M21.181,12.664L11.671,12.705C11.495,12.706 11.328,12.796 11.205,12.955C11.083,13.114 11.016,13.329 11.019,13.551C11.019,13.551 11.019,13.552 11.019,13.552C11.026,14.02 11.401,14.038 11.77,14.038C13.407,14.041 17.673,14.021 19.884,14.025C20.249,14.025 20.571,13.901 20.829,13.574C20.947,13.424 20.994,13.372 21.042,13.258C21.062,13.209 21.094,13.151 21.113,13.063C21.146,12.913 21.181,12.823 21.181,12.664C21.181,12.664 21.181,12.664 21.181,12.664ZM19.069,12.673L21.181,12.664C21.181,12.664 21.333,11.586 20.639,10.895C20.212,10.47 18.792,10.173 18.126,10.822C17.96,10.985 17.749,11.184 18.005,11.567C18.161,11.8 18.561,11.601 18.817,11.525C19.323,11.375 20.282,11.493 19.945,12.398C19.85,12.653 19.069,12.673 19.069,12.673Z" style="fill:${wind};stroke: none;"/>
    </g>
</g>
</g>

`);

  const fog = TAPI.SVGShape(`
  
  <g transform="matrix(1,0,0,1,-3,-23)">

        <g transform="matrix(1.14822,0,0,1.14822,3.20444,3.79332)">
            <path d="M33.775,36.799C33.775,36.618 33.628,36.471 33.447,36.471L9.647,36.471C9.466,36.471 9.319,36.618 9.319,36.799L9.319,37.455C9.319,37.636 9.466,37.783 9.647,37.783L33.447,37.783C33.628,37.783 33.775,37.636 33.775,37.455L33.775,36.799Z" style="fill:rgb(231,232,233); stroke: none; opacity: 0.7"/>
        </g>
        <g transform="matrix(1.06709,0,0,1.14822,7.53593,3.79332)">
            <path d="M53.387,42.445C53.387,42.258 53.223,42.105 53.021,42.105L23.956,42.105C23.754,42.105 23.59,42.258 23.59,42.445L23.59,43.126C23.59,43.314 23.754,43.467 23.956,43.467L53.021,43.467C53.223,43.467 53.387,43.314 53.387,43.126L53.387,42.445Z" style="fill:rgb(231,232,233);stroke: none;opacity: 0.7"/>
        </g>
        <g transform="matrix(1.14822,0,0,1.14822,3.20444,3.79332)">
            <path d="M72.191,36.799C72.191,36.618 72.044,36.471 71.863,36.471L50.328,36.471C50.147,36.471 50,36.618 50,36.799L50,37.455C50,37.636 50.147,37.783 50.328,37.783L71.863,37.783C72.044,37.783 72.191,37.636 72.191,37.455L72.191,36.799Z" style="fill:rgb(231,232,233);stroke: none; opacity: 0.7"/>
        </g>
        <g transform="matrix(1.14822,0,0,1.14822,-29.4662,-3.08165)">
            <path d="M72.191,36.799C72.191,36.618 72.044,36.471 71.863,36.471L50.328,36.471C50.147,36.471 50,36.618 50,36.799L50,37.455C50,37.636 50.147,37.783 50.328,37.783L71.863,37.783C72.044,37.783 72.191,37.636 72.191,37.455L72.191,36.799Z" style="fill:rgb(231,232,233);stroke: none; opacity: 0.7"/>
        </g>
        <g transform="matrix(1.14822,0,0,1.14822,-9.53554,17.8216)">
            <path d="M72.191,36.799C72.191,36.618 72.044,36.471 71.863,36.471L50.328,36.471C50.147,36.471 50,36.618 50,36.799L50,37.455C50,37.636 50.147,37.783 50.328,37.783L71.863,37.783C72.044,37.783 72.191,37.636 72.191,37.455L72.191,36.799Z" style="fill:rgb(231,232,233);stroke: none; opacity: 0.7"/>
        </g>
        <g transform="matrix(0.677795,0,0,1.14822,-8.24577,17.0689)">
            <path d="M72.191,36.799C72.191,36.618 71.942,36.471 71.636,36.471L50.555,36.471C50.249,36.471 50,36.618 50,36.799L50,37.455C50,37.636 50.249,37.783 50.555,37.783L71.636,37.783C71.942,37.783 72.191,37.636 72.191,37.455L72.191,36.799Z" style="fill:rgb(231,232,233);stroke: none; opacity: 0.7"/>
        </g>
        <g transform="matrix(0.677795,0,0,1.14822,30.6153,-2.32894)">
            <path d="M72.191,36.799C72.191,36.618 71.942,36.471 71.636,36.471L50.555,36.471C50.249,36.471 50,36.618 50,36.799L50,37.455C50,37.636 50.249,37.783 50.555,37.783L71.636,37.783C71.942,37.783 72.191,37.636 72.191,37.455L72.191,36.799Z" style="fill:rgb(231,232,233);stroke: none; opacity: 0.7"/>
        </g>
    </g>
</g>
`);

  const foggy = TAPI.SVGShape(`
  <g transform="translate(28,69.5)">
<path class="themeReactive" style="stroke:none;transform:scale(0.5)" d="M3,15H13A1,1 0 0,1 14,16A1,1 0 0,1 13,17H3A1,1 0 0,1 2,16A1,1 0 0,1 3,15M16,15H21A1,1 0 0,1 22,16A1,1 0 0,1 21,17H16A1,1 0 0,1 15,16A1,1 0 0,1 16,15M1,12A5,5 0 0,1 6,7C7,4.65 9.3,3 12,3C15.43,3 18.24,5.66 18.5,9.03L19,9C21.19,9 22.97,10.76 23,13H21A2,2 0 0,0 19,11H17V10A5,5 0 0,0 12,5C9.5,5 7.45,6.82 7.06,9.19C6.73,9.07 6.37,9 6,9A3,3 0 0,0 3,12C3,12.35 3.06,12.69 3.17,13H1.1L1,12M3,19H5A1,1 0 0,1 6,20A1,1 0 0,1 5,21H3A1,1 0 0,1 2,20A1,1 0 0,1 3,19M8,19H21A1,1 0 0,1 22,20A1,1 0 0,1 21,21H8A1,1 0 0,1 7,20A1,1 0 0,1 8,19Z" />
</g>
`);

  const title = TAPI.TextCollection(
    data.payload?.title ?? "",
    TAPI.CollectionStyle(100, 95, 0, 65, 10, 10, 2, TAPI.Alignment.Center),
    [
      TAPI.ShapeStyle("stroke-width", "0"),
      TAPI.ShapeStyle("font-weight", "600"),
      TAPI.ShapeStyle("class", "themeReactive"),
      TAPI.ShapeStyle("color", "#1a1a1a"),
      TAPI.ShapeStyle("font-size", "10", true),
    ]
  );

  const time = TAPI.TextCollection(
    data.payload?.time.toString() ?? "",
    TAPI.CollectionStyle(100, 95, 0, 35, 10, 10, 2, TAPI.Alignment.Center),
    [
      TAPI.ShapeStyle("font-weight", "600"),
      TAPI.ShapeStyle("stroke-width", "0"),
      TAPI.ShapeStyle("font-size", "10", true),
      TAPI.ShapeStyle("text-shadow", "0.8px 0.8px 0.1px rgb(80, 80, 80)"),
      TAPI.ShapeStyle("fill", data.payload?.timeColor || "#FFFFFF"),
    ]
  );

  const temp = TAPI.TextCollection(
    (data.payload?.temp.toString() ?? "") + "°",
    TAPI.CollectionStyle(100, 95, 12, 79, 10, 10, 2, TAPI.Alignment.Center),
    [
      TAPI.ShapeStyle("font-weight", "400"),
      TAPI.ShapeStyle("stroke-width", "0"),
      TAPI.ShapeStyle("class", "gly_text"),
      TAPI.ShapeStyle("class", "themeReactive"),
      TAPI.ShapeStyle("font-size", "10", true),
    ]
  );

  switch (data.payload?.daytype) {
    case "day":
      shape.append(() => sunShadow2.node());
      shape.append(() => sunShadow1.node());
      shape.append(() => sun.node());
      break;
    case "night":
      shape.append(() => moonShadow2.node());
      shape.append(() => moonShadow1.node());
      shape.append(() => sun.node());

      break;
    case "dawn":
      shape.append(() => dawnShadow2.node());
      shape.append(() => dawnShadow1.node());
      shape.append(() => dawn.node());
      shape.append(() => sun.node());

      break;
    case "grey":
      shape.append(() => greyShadow2.node());
      shape.append(() => greyShadow1.node());
      shape.append(() => grey.node());
      shape.append(() => sun.node());

      break;
    case "blue":
      shape.append(() => blueShadow2.node());
      shape.append(() => blueShadow1.node());
      shape.append(() => blue.node());
      shape.append(() => sun.node());

      break;
    case "custom":
      shape.append(() => customShadow2.node());
      shape.append(() => customShadow1.node());
      shape.append(() => custom.node());
      shape.append(() => sun.node());

      break;
  }

  switch (data.payload?.weathertype) {
    case "clear":
      if (data.payload?.daytype == "night") {
        shape.append(() => night.node());
      } else if (data.payload?.daytype == "dawn") {
        shape.append(() => sunset.node());
      } else shape.append(() => sunny.node());

      break;
    case "rainy":
      shape.append(() => rainDrops.node());
      shape.append(() => rainDrops2.node());
      shape.append(() => rainy.node());
      break;
    case "cloudy":
      shape.append(() => cloud.node());
      shape.append(() => cloud2.node());
      shape.append(() => cloudy.node());
      break;
    case "snowy":
      shape.append(() => snow.node());
      shape.append(() => snowy.node());
      break;
    case "windy":
      shape.append(() => windy.node());
      shape.append(() => windyCloud.node());
      shape.append(() => windyCloud2.node());
      break;
    case "foggy":
      shape.append(() => foggy.node());
      shape.append(() => fog.node());
      break;
  }

  //   if (data.payload?.daytype == "day") {
  //     if (data.payload?.weathertype === "clear") {
  //       shape.append(() => sunShadow2.node());
  //       shape.append(() => sunShadow1.node());
  //       shape.append(() => sun.node());
  //       shape.append(() => sunny.node());
  //     } else if (data.payload?.weathertype === "rainy") {
  //       shape.append(() => sunShadow2.node());
  //       shape.append(() => sunShadow1.node());
  //       shape.append(() => sun.node());
  //       shape.append(() => rainDrops.node());
  //       shape.append(() => rainDrops2.node());
  //       shape.append(() => rainy.node());
  //     } else if (data.payload?.weathertype === "cloudy") {
  //       shape.append(() => sunShadow2.node());
  //       shape.append(() => sunShadow1.node());
  //       shape.append(() => sun.node());
  //       shape.append(() => cloud.node());
  //       shape.append(() => cloud2.node());
  //       shape.append(() => cloudy.node());
  //     } else if (data.payload?.weathertype === "snowy") {
  //       shape.append(() => sunShadow2.node());
  //       shape.append(() => sunShadow1.node());
  //       shape.append(() => sun.node());
  //       shape.append(() => snow.node());
  //       shape.append(() => snowy.node());
  //     } else if (data.payload.weathertype === "windy") {
  //       shape.append(() => windy.node());
  //       shape.append(() => sunShadow2.node());
  //       shape.append(() => sunShadow1.node());
  //       shape.append(() => sun.node());
  //       shape.append(() => windyCloud.node());
  //       shape.append(() => windyCloud2.node());
  //     }
  //   } else if (data.payload?.daytype === "night") {
  //     if (data.payload?.weathertype === "clear") {
  //       shape.append(() => night.node());
  //       shape.append(() => moonShadow2.node());
  //       shape.append(() => moonShadow1.node());
  //       shape.append(() => moon.node());
  //     } else if (data.payload?.weathertype === "rainy") {
  //       shape.append(() => rainy.node());
  //       shape.append(() => moonShadow2.node());
  //       shape.append(() => moonShadow1.node());
  //       shape.append(() => moon.node());
  //       shape.append(() => rainDrops.node());
  //       shape.append(() => rainDrops2.node());
  //     } else if (data.payload?.weathertype === "cloudy") {
  //       shape.append(() => moonShadow2.node());
  //       shape.append(() => moonShadow1.node());
  //       shape.append(() => moon.node());
  //       shape.append(() => cloudy.node());
  //       shape.append(() => cloud.node());
  //       shape.append(() => cloud2.node());
  //     } else if (data.payload?.weathertype === "snowy") {
  //       shape.append(() => snowy.node());
  //       shape.append(() => moonShadow2.node());
  //       shape.append(() => moonShadow1.node());
  //       shape.append(() => moon.node());
  //       shape.append(() => snow.node());
  //     } else if (data.payload?.weathertype === "windy") {
  //       shape.append(() => windy.node());
  //       shape.append(() => moonShadow2.node());
  //       shape.append(() => moonShadow1.node());
  //       shape.append(() => moon.node());
  //       shape.append(() => windyCloud.node());
  //       shape.append(() => windyCloud2.node());
  //     }
  //   } else if (data.payload?.daytype == "dawn") {
  //     if (data.payload?.weathertype === "clear") {
  //       shape.append(() => dawnShadow2.node());
  //       shape.append(() => dawnShadow1.node());
  //       shape.append(() => dawn.node());
  //     } else if (data.payload?.weathertype === "rainy") {
  //       shape.append(() => rainy.node());
  //       shape.append(() => dawnShadow2.node());
  //       shape.append(() => dawnShadow1.node());
  //       shape.append(() => dawn.node());
  //       shape.append(() => rainDrops.node());
  //       shape.append(() => rainDrops2.node());
  //     } else if (data.payload?.weathertype === "cloudy") {
  //       shape.append(() => dawnShadow2.node());
  //       shape.append(() => dawnShadow1.node());
  //       shape.append(() => dawn.node());
  //       shape.append(() => cloudy.node());
  //       shape.append(() => cloud.node());
  //       shape.append(() => cloud2.node());
  //     } else if (data.payload?.weathertype === "snowy") {
  //       shape.append(() => snowy.node());
  //       shape.append(() => dawnShadow2.node());
  //       shape.append(() => dawnShadow1.node());
  //       shape.append(() => dawn.node());
  //       shape.append(() => snow.node());
  //     } else if (data.payload?.weathertype === "windy") {
  //       shape.append(() => windy.node());
  //       shape.append(() => dawnShadow2.node());
  //       shape.append(() => dawnShadow1.node());
  //       shape.append(() => dawn.node());
  //       shape.append(() => windyCloud.node());
  //       shape.append(() => windyCloud2.node());
  //     }
  //   }

  shape.append(() => time.node());
  shape.append(() => temp.node());
  shape.append(() => title.node());

  // Light and Dark Mode handling
  TAPI.OnThemeChange(data, (theme) => {
    shape
      .selectAll(".themeReactive")
      .attr("fill", theme === "light" ? "rgb(80, 80, 80)" : "#ffffff");
  });

  return shape;
}
